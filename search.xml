<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[‰∏ÄÁØáÊñáÁ´†ËØ¥Ê∏ÖÊ•öjavaÁ∫øÁ®ã-Âü∫Á°Ä]]></title>
    <url>%2F2018%2F07%2F25%2Fjava%E7%BA%BF%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[[TOC] ÂèàÈ™óÂà∞‰∏Ä‰∏™ËÆøÈóÆÈáè„ÄÇ„ÄÇ„ÄÇÂë∏ ÔºåjavaÁ∫øÁ®ãÈÇ£‰πàÂ§öÁü•ËØÜÔºåÊÄé‰πàÂèØËÉΩ‰∏ÄÁØáÂ∞èÊñáËÆ≤ÂæóÂÆåÔºàÊàñËÆ∏Â§ßÁ•ûËÉΩËÆ≤Ê∏ÖÊ•öÔºâ„ÄÇËÑöË∏èÂÆûÂú∞Ôºå‰∏ÄÊ≠•‰∏ÄÊ≠•Âæ™Â∫èÊ∏êËøõÊâçÊòØÊúÄÂø´ÁöÑÂäûÊ≥ï„ÄÇÂØπÔºåÊàëÊòØËØ¥ÁªôËá™Â∑±Ëøô‰∏™ÊÄ•ÊÄßÂ≠êÁöÑüò± ÂàõÂª∫javaÁ∫øÁ®ãÁöÑ‰∏§ÁßçÊñπÂºèÂíåÂêØÂä® ÁªßÊâøThreadÁ±ª ÁªßÊâøThreadÁ±ªÔºåÁÑ∂ÂêéÈáçÂÜôrun()ÊñπÊ≥ïÔºåÈÄöËøáÁ∫øÁ®ãÁöÑstart()ÂºÄÂêØÁ∫øÁ®ã 1234567891011121314public class RunByThread extends Thread&#123; @Override public void run()&#123; while(true)&#123; try&#123; Thread.sleep(5000); System.out.println("running by thread......"); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; ÂÆûÁé∞RunnableÊé•Âè£ ‰∏éThreadÁ±ª‰ººÔºåÂÆûÁé∞RunnableÊé•Âè£ÔºåÈáçÂÜôÂÖ∂‰∏≠ÁöÑrun()ÊñπÊ≥ïÔºåÈÄöËøáÁ∫øÁ®ãÁöÑstart()ÂºÄÂêØÁ∫øÁ®ã„ÄÇ 1234567891011121314151617public class RunByRunnable implements Runnable &#123; public void run() &#123; while(true)&#123; try&#123; Thread.sleep(1000); System.out.println("running by runnable......"); &#125;catch (InterruptedException e)&#123; System.out.println("interrupted..."); e.printStackTrace(); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 3.ÂêØÂä®Á∫øÁ®ã ‚Äã ÁªßÊâøThreadÁ±ªÁöÑÂ≠êÁ±ªÔºåÂèØÈÄöËøá[1.ÂàõÂª∫Êñ∞ÂØπË±°]ÊàñËÄÖ[2.ÂàõÂª∫ÂØπË±°ÊîæÂÖ•ThreadÁ±ª]Êù•ÂàõÂª∫Á∫øÁ®ã ‚Äã ÂÆûÁé∞RunnableÊé•Âè£ÁöÑÊñπÊ≥ïÔºåÈÄöËøáÊñ∞Âª∫ÂØπË±°ÔºåÊîæÂÖ•ThreadÁ±ª‰∏≠Êù•ÂàõÂª∫Á∫øÁ®ã„ÄÇÂõ†‰∏∫RunnableÊé•Âè£Âè™Êúârun()ÊñπÊ≥ï„ÄÇ ‚Äã ‰ΩøÁî®ThreadÊèê‰æõÁöÑstart()ÊñπÊ≥ïÂêØÂä®Á∫øÁ®ã 1234567891011121314151617public class StartThead &#123; public static void main(String[] args) &#123; //ÁªßÊâøThreadÁ±ªÁöÑÊñπÊ≥ïÔºåÂèØ‰ª•ÈÄöËøá‰ª•‰∏ã‰∏§ÁßçÊñπÊ≥ïÂºÄÂêØÁ∫øÁ®ã //1. ÂàõÂª∫ÂÆû‰æã RunByThread runByThread = new RunByThread(); runByThread.start(); //2. ÂàõÂª∫ÂØπË±°ÔºåÊîæÂÖ•Thread‰∏≠ Thread threadRun = new Thread(new RunByThread()); threadRun.start(); threadRun.isInterrupted(); //ÂÆûÁé∞RunnableÊé•Âè£ÁöÑÊñπÊ≥ïÔºåÈÄöËøá‰ª•‰∏ã‰∏ÄÁßçÊñπÊ≥ïÂºÄÂêØÁ∫øÁ®ã„ÄÇ //ÂàõÂª∫ÂØπË±°ÔºåÊîæÂÖ•Thread‰∏≠ Thread thread = new Thread(new RunByRunnable(),"runByThread"); thread.start(); &#125;&#125; Á∫øÁ®ãÁöÑ‰ºòÂÖàÁ∫ßÂà´Áé∞‰ª£Êìç‰ΩúÁ≥ªÁªüÂü∫Êú¨Èáá‚Ω§Êó∂ÂàÜÁöÑÂΩ¢ÂºèË∞ÉÂ∫¶Ëøê‚æèÁöÑÁ∫øÁ®ãÔºåÊìç‰ΩúÁ≥ªÁªü‰ºöÂàÜÂá∫‚ºÄ‰∏™‰∏™Êó∂Èó¥‚ΩöÔºåÁ∫øÁ®ã‰ºöÂàÜÈÖçÂà∞Ëã•‚º≤Êó∂Èó¥‚ΩöÔºåÂΩìÁ∫øÁ®ãÁöÑÊó∂Èó¥‚Ωö‚Ω§ÂÆå‰∫ÜÂ∞±‰ºöÂèë‚Ω£Á∫øÁ®ãË∞ÉÂ∫¶ÔºåÂπ∂Á≠âÂæÖÁùÄ‰∏ãÊ¨°ÂàÜÈÖç„ÄÇ ËÆæÁΩÆÁ∫øÁ®ãÁöÑ‰ºòÂÖàÁ∫ßÔºåÁõÆÁöÑÊòØÊåâÁÖßÁ∫øÁ®ã‰ºòÂÖàÁ∫ßÁªôÁ∫øÁ®ãÂàÜÈÖçÊó∂Èó¥ÁâáÁöÑÂ§öÂ∞ëÔºå‰ºòÂÖàÁ∫ßË∂äÈ´òÔºåÊó∂Èó¥ÁâáË∂äÂ§ö„ÄÇ ‰ºòÂÖàÁ∫ßËåÉÂõ¥Ôºö 1-10 ÊñπÊ≥ï setPriority(int) ‰ª£Á†ÅÂÆû‰æãÔºö 1234567891011121314151617181920212223242526public class RunByRunnable implements Runnable&#123; @Override public void run() &#123; System.out.println(Thread.currentThread().getName()); &#125; public static void main(String[] args) &#123; RunByRunnable runByRunnable = new RunByRunnable(); Thread thread1 = new Thread(runByRunnable,"run1"); Thread thread2 = new Thread(runByRunnable,"run2"); Thread thread3 = new Thread(runByRunnable,"run3"); Thread thread4 = new Thread(runByRunnable,"run4"); thread1.setPriority(5); thread2.setPriority(3); thread3.setPriority(8); thread4.setPriority(1); thread1.start(); thread2.start(); thread3.start(); thread4.start(); &#125;&#125; (Êï≤ÈªëÊùøÔºÅÔºÅ)Âú®‰∏çÂêåÁöÑJVM‰ª•ÂèäÊìç‰ΩúÁ≥ªÁªü‰∏äÔºåÁ∫øÁ®ãËßÑÂàí‰ºöÂ≠òÂú®Â∑ÆÂºÇÔºåÊúâ‰∫õÊìç‰ΩúÁ≥ªÁªüÁîö‚æÑ‰ºöÂøΩÁï•ÂØπÁ∫øÁ®ã‰ºòÂÖàÁ∫ßÁöÑËÆæÂÆö„ÄÇso: ==Á∫øÁ®ã‰ºòÂÖàÁ∫ß‰∏çËÉΩ‰Ωú‰∏∫Á®ãÂ∫èÊ≠£Á°ÆÊÄßÁöÑ‰æùËµñ== Á∫øÁ®ãÁöÑÁä∂ÊÄÅjavaÁ∫øÁ®ã‰∏≠‰∏ÄÂÖ±Êúâ6ÁßçÁä∂ÊÄÅÔºö new Êñ∞ÂàõÂª∫Áä∂ÊÄÅÔºåËøòÊú™Ë∞ÉÁî®start()ÊñπÊ≥ï runnable ËøêË°åÁä∂ÊÄÅÔºåjava‰∏≠ÔºåÂ∞ÜÂ∞±Áª™ÂíåËøêË°åÁªüÁß∞‚ÄúËøêË°å‰∏≠‚Äù blocked ÈòªÂ°ûÁä∂ÊÄÅÔºåÁ∫øÁ®ãÈòªÂ°û‰∫éÈîÅ waiting Á≠âÂæÖÁä∂ÊÄÅÔºå‰∏ÄÁõ¥Á≠âÂæÖÈÄöÁü•Êàñ‰∏≠Êñ≠ time_waiting Ë∂ÖÊó∂Á≠âÂæÖÔºåÁ≠âÂæÖÈÄöÁü•Êàñ‰∏≠Êñ≠ÔºåË∂ÖÊó∂ÂêéËá™Âä®ËøîÂõû terminated ÂΩìÂâçÁ∫øÁ®ãÂ∑≤ÁªèÊâßË°åÂÆåÊØï DaemonÁ∫øÁ®ã‚Äã DaemonÁ∫øÁ®ãÂç≥‰∏∫ÂÆàÊä§Á∫øÁ®ãÔºåÊòØ‰∏ÄÁßçÊîØÊåÅÊÄßÁ∫øÁ®ãÔºå‰∏ªË¶ÅÁî®‰∫éÁ®ãÂ∫èÂêéÂè∞‰∏≠ÊîØÊåÅÊÄßÂ∑•‰Ωú„ÄÇ‰æãÂ¶ÇÂûÉÂúæÂõûÊî∂„ÄÇÂΩì‰∏Ä‰∏™JavaËôöÊãüÊú∫‰∏çÂ≠òÂú®ÈùûDaemonÁöÑÊó∂ÂÄôÔºåJavaËôöÊãüÊú∫‰ºöËá™Âä®ÈÄÄÂá∫Ôºå‰∏çËÆ∫DaemonÊòØÂê¶ÊâßË°åÂÆåÊØïÔºåÊòØ‰ªÄ‰πàÁä∂ÊÄÅ„ÄÇ ‚Äã ÊñπÊ≥ïÔºö thread.setDaemon(true); ‰ª•‰∏ã‰ª£Á†ÅÔºåÂèØÊµãËØïDaemonÁöÑËøêË°åÊòØÂê¶‰ºöË¢´Âº∫Âà∂ÊùÄÊéâ 123456789101112131415161718192021222324public class DaemonThread extends Thread &#123; @Override public void run() &#123; try &#123; System.out.println("DaemonThread running start"); TimeUnit.SECONDS.sleep(1); System.out.println("DaemonThread running end"); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); System.out.println("DaemonThread InterruptedException"); &#125; catch (Exception e) &#123; e.printStackTrace(); System.out.println("DaemonThread exception"); &#125; finally &#123; System.out.println("DaemonThread finally"); &#125; &#125; public static void main(String[] args) &#123; DaemonThread daemonThread = new DaemonThread(); daemonThread.setDaemon(true); daemonThread.start(); &#125;&#125; ÊâßË°åÁªìÊûúÔºö DaemonThread running start ËØ•Á®ãÂ∫èÊúâ‰∏§‰∏™Á∫øÁ®ãÔºå‰∏Ä‰∏™‰∏ªÁ∫øÁ®ãÔºå‰∏Ä‰∏™Ë¢´ËÆæÁΩÆ‰∏∫DaemonÁöÑÁ∫øÁ®ã„ÄÇÂÆàÊä§Á∫øÁ®ãÂºÄÂßãÊâßË°åÂêéÔºåËøõÂÖ•Áù°Áú†Áä∂ÊÄÅ„ÄÇÁÑ∂Âêé‰∏ªÁ∫øÁ®ãÊâßË°åÂÆåÊØïÔºåËøôÊó∂JVMÂèëÁé∞Ê≤°Êúâ‰∫ÜÈùûÂÆàÊä§Á∫øÁ®ãÔºå‰∫éÊòØÁõ¥Êé•ÈÄÄÂá∫‰∫Ü„ÄÇDaemonÁ∫øÁ®ã‰∏≠Êú™ÊâßË°åÂÆåÁöÑ‰ª£Á†ÅÔºå‰πü‰∏ç‰ºöÂÜçÊâßË°å„ÄÇ Á∫øÁ®ã‰∏≠Êñ≠ÁöÑÊ¶ÇÂøµÂíå‰ΩøÁî®‚Äã ‰∏≠Êñ≠ÂèØ‰ª•ÁêÜËß£‰∏∫Á∫øÁ®ãÁöÑ‰∏Ä‰∏™Ê†áËØÜ‰ΩçÁä∂ÊÄÅ„ÄÇÂÆÉË°®Á§∫‰∏Ä‰∏™ËøêË°å‰∏≠ÁöÑÁ∫øÁ®ãÊòØÂê¶Ë¢´ÂÖ∂ÂÆÉÁ∫øÁ®ãËøõË°å‰∫Ü‰∏≠Êñ≠Êìç‰Ωú„ÄÇ ‚Äã ‰ΩøÁî®Ôºö AÁ∫øÁ®ãÂØπBÁ∫øÁ®ãË¶ÅËøõË°å‰∏≠Êñ≠Ôºö Âú®A‰∏≠Ë∞ÉÁî®ÔºåB.interrupt()Ôºõ BÁ∫øÁ®ãÂØπAÁ∫øÁ®ãËøõË°åÂìçÂ∫îÔºöÈÄöËøáË∞ÉÁî®ÊñπÊ≥ï isInterrupted()ÊñπÊ≥ïÂà§Êñ≠ÊòØÂê¶Ë¢´ÊâìÊñ≠Ôºåtrue‰∏∫‰∏≠Êñ≠ËøáÔºåfalse‰∏∫Êú™‰∏≠Êñ≠Ëøá„ÄÇ Ê†áËØÜ‰ΩçÂ§ç‰ΩçÔºöThread.interrupted ‚Äã ÂΩìÁ∫øÁ®ã‰∏∫ÁªàÁªìÁä∂ÊÄÅÔºåÂç≥‰ΩøÁ∫øÁ®ãË¢´‰∏≠Êñ≠ËøáÔºåÊ†áÂøó‰Ωç‰πü‰∏∫falseÂΩìÊäõÂá∫InterruptedExceptionÂºÇÂ∏∏Êó∂Ôºåjvm‰ºöÂÖàÂ∞Ü‰∏≠Êñ≠Ê†áÂøó‰ΩçÊ∏ÖÈô§ÔºåÊâÄ‰ª•isInterrupted() ‰∏∫false„ÄÇ ÂÆû‰æã‰ª£Á†Å 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758public class ThreadInterrupt &#123; public static void main(String[] args) &#123; //sleepThread‰∏çÂÅúÁöÑÂ∞ùËØïÁù°Áú† Thread sleepThread = new Thread(new SleepRunner(), "sleepThread"); sleepThread.setDaemon(true); //budyThreadÁ∫øÁ®ã‰∏ÄÁõ¥Âú®ÊâßË°å Thread busyThread = new Thread(new BusyRunner(), "busyThread"); busyThread.setDaemon(true); sleepThread.start(); busyThread.start(); //‰ºëÁú†Âá†ÁßíÈíüÔºåËÆ©‰∏§‰∏™Á∫øÁ®ãÂÖÖÂàÜËøêË°å try &#123; Thread.sleep(3000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; sleepThread.interrupt(); busyThread.interrupt(); System.out.println("sleepThread interrupted is " + sleepThread.isInterrupted()); System.out.println("busyThread interrupted is " + busyThread.isInterrupted()); //Èò≤Ê≠¢‰∏§‰∏™Á∫øÁ®ãÊèêÂâçÈÄÄÂá∫ try &#123; Thread.sleep(2000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125;&#125;class SleepRunner implements Runnable &#123; @Override public void run() &#123; while (true) &#123; try &#123; Thread.sleep(1000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125;class BusyRunner implements Runnable &#123; @Override public void run() &#123; while (true) &#123; //xxx Áà±ÊâßË°å‰ªÄ‰πàÊâßË°å‰ªÄ‰πàÂêß &#125; &#125;&#125; ÊâßË°åÁªìÊûú sleepThread interrupted is falsebusyThread interrupted is truejava.lang.InterruptedException: sleep interrupted at java.lang.Thread.sleep(Native Method) at ThreadPackage.SleepRunner.run(ThreadInterrupt.java:57) at java.lang.Thread.run(Thread.java:748) ÊäõÂá∫InterruptedExceptionÁöÑÁ∫øÁ®ãÔºå‰∏≠Êñ≠‰ΩçË¢´Ê∏ÖÈô§‰∫ÜÔºåÂè¶Â§ñ‰∏Ä‰∏™Á∫øÁ®ãÔºåÂ∞±Ê≤°ÊúâË¢´Ê∏ÖÈô§ ÊÄªÁªìÊú¨ÁØáÊñáÁ´†‰∏ªË¶ÅËÆ≤Ëß£JavaÁ∫øÁ®ãÁöÑÂü∫Á°ÄÔºå‰ΩøÁî®„ÄÇÈáçÁÇπÂú®‰∫éJavaÁ∫øÁ®ãÁöÑÂàõÂª∫ÂíåÂºÄÂêØ„ÄÇ ÂÖ®ÈÉ®‰ª£Á†ÅËßÅÔºö ‚Äã https://github.com/ValjeanShaw/MyConcurrent/tree/develop/src/main/java/ThreadPackage]]></content>
      <categories>
        <category>java</category>
        <category>Âπ∂Âèë</category>
      </categories>
      <tags>
        <tag>Âπ∂Âèë</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[synchronizedÂÖ≥ÈîÆÂ≠ó]]></title>
    <url>%2F2018%2F07%2F16%2Fsynchronized%E5%85%B3%E9%94%AE%E5%AD%97%2F</url>
    <content type="text"><![CDATA[[TOC] ÂÆö‰πâsynchronizedÊñπÊ≥ïÊòØjava‰∏≠Â∏∏Áî®ÁöÑÂÖ≥ÈîÆÂ≠óÔºåÂ±û‰∫éJVMÂ±ÇÈù¢ÔºåjavaÁöÑÂÜÖÁΩÆÈîÅ,Java‰∏≠ÁöÑÊØè‰∏Ä‰∏™ÂØπË±°ÈÉΩÂèØ‰ª•‰Ωú‰∏∫ÈîÅÔºåÂΩìÂØπË±°Ë¢´synchronizedÈîÅ‰Ωè‰πãÂêéÔºåÊ≠§ÂØπË±°ÂΩìÂâçÊòØË¢´ËØ•ÈîÅÂíåËØ•Á∫øÁ®ãÁã¨Âç†„ÄÇ Â∫îÁî®ÂàÜ‰∏∫‰øÆÈ•∞ÊñπÊ≥ïÂíå‰øÆÈ•∞‰ª£Á†ÅÂùó‰∏§Â§ßÁ±ªÔºöÂÖ∑‰ΩìÂ¶Ç‰∏ã 4ÁßçÁî®Ê≥ïÔºö ‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ï ‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï ÂêåÊ≠•ÂÆû‰æãÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó ÂêåÊ≠•ÈùôÊÄÅÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó ‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ï123456789public synchronized void addOne()&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; num++; System.out.println(this.getId()+" "+num+" "+System.currentTimeMillis()); &#125; ÂΩì‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ïÊó∂ÔºåÈîÅ‰ΩèÁöÑÊòØË∞ÉÁî®ËØ•ÊñπÊ≥ïÁöÑÂΩìÂâçÂØπË±°ÔºåÂç≥Ôºö12Thread thread1 = new ThreadTest();Thread thread2 = new ThreadTest(); thread1Âíåthread2Âú®Âêå‰∏ÄÊó∂ÂàªË∞ÉÁî®ÊòØ‰∏ç‰ºö‰∫ßÁîüÂÜ≤Á™ÅÁöÑÔºå‰ΩÜÊòØthread1Âíåthread2Ëá™Ë∫´ÂÜÖÈÉ®ÊòØ‰ºöÁõ∏‰∫íÁ´û‰∫âÁöÑ„ÄÇ‰æãÔºåÂ§ö‰∏™Á∫øÁ®ã‰∏çËÉΩÂêåÊó∂Ë∞ÉÁî®thread1.addOne()ÊñπÊ≥ï„ÄÇ ‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï123456789public static synchronized void addTwo()&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; count += 2; System.out.println(" "+count+" "+System.currentTimeMillis()); &#125; ÈîÅ‰ΩèÁöÑÊòØÂΩìÂâçËøô‰∏™Á±ªÁöÑClassÂØπË±°ÔºåÂç≥ÔºöÂΩìË∞ÉÂä® addTwo()ÊñπÊ≥ïÊó∂ÔºåÂ∞Ü‰∫ßÁîüÁ´û‰∫â„ÄÇ‰∏çËÆ∫ÂÆû‰æãÂØπË±°ÊòØ‰ªÄ‰πà ‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó1234567891011121314public void addThree()&#123; //‰ΩøÁî®‰∫Ü‚Äúthis‚ÄùÔºåÂç≥‰∏∫Ë∞ÉÁî®addÊñπÊ≥ïÁöÑÂÆû‰æãÊú¨Ë∫´„ÄÇ synchronized (this)&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; number += 3; &#125; System.out.println(" "+number+" "+System.currentTimeMillis()); &#125; ÈáçÁÇπÂÖ≥Ê≥®synchronized (this)Êã¨Âè∑ÈáåÈù¢„ÄÇthisÊåáÂÆöÊòØÂºïÁî®ÁöÑÂΩìÂâçÂØπË±°ÔºåÊïàÊûúÂíå‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ï‰∏ÄËá¥„ÄÇÂΩì()ÈáåÈù¢ÊòØ ÂΩìÂâçÁ±ªÁöÑclassÂØπË±°Êó∂SynchronizedTest.classÔºåÊïàÊûúÂíå‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï‰∏ÄËá¥„ÄÇ ‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó123456789101112public static void addFour()&#123; synchronized (SynchronizedTest.class)&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; counter += 4; &#125; System.out.println(" "+counter+" "+System.currentTimeMillis()); &#125; ÂΩìÈùôÊÄÅÊñπÊ≥ïÊó∂Ôºå()ÈáåÈù¢Âè™ËÉΩÊòØÂΩìÂâçÁ±ªÁöÑclassÂØπË±° SynchronizedTest.classÔºåÊïàÊûúÂíå‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï‰∏ÄËá¥„ÄÇ synchronized‰ΩøÁî®ÁöÑ‰∏§‰∏™ÁªÜËäÇÈóÆÈ¢ò synchronizedÈîÅÊòØÂèØÈáçÂÖ•ÈîÅ synchronizedÈîÅÊòØËá™Âä®ÈîÅÔºåÂΩìÊäõÂá∫ÂºÇÂ∏∏Êó∂Ôºå‰ºöËá™Âä®ÈáäÊîæÈîÅ ÈôÑÂΩïÔºåÂÆåÊï¥‰ª£Á†Å12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697import lombok.Data;/** * @author xiaoran * @version 1.0 * * * 1.‰øÆÈ•∞ÂÆû‰æãÊñπÊ≥ï * 2.‰øÆÈ•∞ÈùôÊÄÅÊñπÊ≥ï * 3.ÂêåÊ≠•ÂÆû‰æãÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó * 4.ÂêåÊ≠•ÈùôÊÄÅÊñπÊ≥ï‰∏≠ÁöÑ‰ª£Á†ÅÂùó */@Datapublic class SynchronizedTest extends Thread&#123; private Integer num = 100; private static Integer count = 200; private Integer number = 300; private static Integer counter = 400; public synchronized void addOne()&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; num++; System.out.println(this.getId()+" "+num+" "+System.currentTimeMillis()); &#125; public static synchronized void addTwo()&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; count += 2; System.out.println(" "+count+" "+System.currentTimeMillis()); &#125; public void addThree()&#123; //‰ΩøÁî®‰∫Ü‚Äúthis‚ÄùÔºåÂç≥‰∏∫Ë∞ÉÁî®addÊñπÊ≥ïÁöÑÂÆû‰æãÊú¨Ë∫´„ÄÇ synchronized (this)&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; number += 3; &#125; System.out.println(" "+number+" "+System.currentTimeMillis()); &#125; public static void addFour()&#123; synchronized (SynchronizedTest.class)&#123; try&#123; Thread.sleep(1000); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; counter += 4; &#125; System.out.println(" "+counter+" "+System.currentTimeMillis()); &#125; public void run()&#123; addOne(); addTwo(); addThree(); addFour(); &#125; public static void main(String[] args) &#123; SynchronizedTest thread1 = new SynchronizedTest(); SynchronizedTest thread2 = new SynchronizedTest(); SynchronizedTest thread3 = new SynchronizedTest(); SynchronizedTest thread4 = new SynchronizedTest(); SynchronizedTest thread5 = new SynchronizedTest(); SynchronizedTest thread6 = new SynchronizedTest(); thread1.start(); thread2.start(); thread3.start(); thread4.start(); thread5.start(); thread6.start(); &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>ÈîÅ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰πêËßÇÈîÅÂíåÊÇ≤ËßÇÈîÅ]]></title>
    <url>%2F2018%2F07%2F12%2F%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81%2F</url>
    <content type="text"><![CDATA[Ëøô‰∏§‰∏™Â±û‰∫éÂ∏∏Âú®Êï∞ÊçÆÂ∫ì‰∫ãÂä°‰∏≠Ë¢´ÊèêÂèäÔºå‰πêËßÇÈîÅÂíåÊÇ≤ËßÇÈîÅÂ±û‰∫éÊÄùÊÉ≥Á∫ßÂà´ÔºåÊòØ‰∏∫‰∫Ü‰øùÊåÅ‰∫ãÂä°ÁöÑÈöîÁ¶ªÊÄß‰ª•ÂèäÊï∞ÊçÆÂ∫ìÁöÑ‰∏ÄËá¥ÊÄßËÄåË¢´‰∏öÂÜÖÂÆö‰πâÂá∫Êù•ÁöÑ‰∏ÄÁßçÊâãÊÆµ,Âπ∂‰∏çÂ±û‰∫éÊï∞ÊçÆÂ∫ìÈîÅÊú∫Âà∂,‰ΩÜÊòØÊÇ≤ËßÇÈîÅÊòØ‰æùËµñ‰∫éÊï∞ÊçÆÂ∫ìÁöÑÈîÅÊú∫Âà∂ÂÆûÁé∞ÁöÑ„ÄÇ‰πêËßÇÈîÅ‰∏çÊòØÊï∞ÊçÆÂ∫ìËá™Â∏¶ÁöÑÔºåÈúÄË¶ÅËá™Â∑±ÂéªÂÆûÁé∞„ÄÇ [TOC] ÂÆö‰πâ ‰πêËßÇÈîÅÔºöÂΩìÂâç‰∫ãÂä°Êìç‰ΩúÊï∞ÊçÆÊó∂ÔºåËÆ§‰∏∫ÂÖ∂‰ªñ‰∫ãÂä°‰∏ç‰ºö‰øÆÊîπÊ≠£Âú®ËØªÂèñÁöÑÊï∞ÊçÆÂÖ∑‰ΩìÔºö ‰∫ãÂä°ËØªÂèñ Ôºå‰∏ç‰∏äÈîÅ ‰∫ãÂä°Êõ¥Êñ∞ÔºåÂú®Êèê‰∫§Êï∞ÊçÆÊõ¥Êñ∞‰πãÂâçÔºåÂÖàÊ£ÄÊü•Âú®ËØ•‰∫ãÂä°ËØªÂèñÊï∞ÊçÆÂêéÔºàÊõ¥Êñ∞ÂâçÔºâÔºåÊúâÊ≤°ÊúâÂÖ∂‰ªñ‰∫ãÂä°Âèà‰øÆÊîπ‰∫ÜËØ•Êï∞ÊçÆ„ÄÇÊó†ÔºåÂàô‰∫ãÂä°Êèê‰∫§ÔºõÊúâÔºåÂàô‰∫ãÂä°Â§±Ë¥•„ÄÇ ÊÇ≤ËßÇÈîÅÔºöËÆ§‰∏∫‰∫ãÂä°Âú®Êìç‰ΩúÊï∞ÊçÆÁöÑÊó∂ÂÄôÔºåËÇØÂÆö‰ºöÂá∫Áé∞ÂÜ≤Á™ÅÊï∞ÊçÆÂ∫ì‰∏≠ÊÇ≤ËßÇÈîÅÁöÑÂÆûÁé∞ÂàÜ‰∏§ÁßçÔºö ÂÖ±‰∫´ÈîÅ ÔºàËØªÈîÅÔºåÈíàÂØπselectÁöÑÈîÅÊú∫Âà∂ÔºâËØªÔºöÂ§ö‰∏™‰∫ãÂä°ÂèØÂè†Âä†ÈîÅÔºåÂèØ‰ª•ËØªÊï∞ÊçÆÔºåÂÜôÊï∞ÊçÆÂ∞ÜÁ≠âÂæÖÊâÄÊúâËØªÈîÅÈÉΩÈáäÊîæÊâçËÉΩÊâßË°åÂΩìÂØπ‰∏Ä‰∏™Êï∞ÊçÆÂä†ÂÖ•ÂÖ±‰∫´ÈîÅÔºåÂÖ∂‰ªñ‰∫ãÂä°ÂØπËØ•Êï∞ÊçÆÊúÄÂ§öÂè™ËÉΩÂÜçÂä†ÂÖ±‰∫´ÈîÅÔºå‰∏çËÉΩÂä†ÊéíÂÆÉÈîÅ ÊéíÂÆÉÈîÅ ÔºàÂÜôÈîÅÔºåÈíàÂØπupdate,deleteÁöÑÈîÅÊú∫Âà∂ÔºâÂÜôÔºöÂÜôÊï∞ÊçÆÊó∂ÔºåÁã¨Âç†ËØ•Êï∞ÊçÆÔºåËØ•Êï∞ÊçÆ‰∏çËÉΩÂÜçÂä†ÂÖ•‰ªª‰ΩïÂÖ∂‰ªñÈîÅÔºå‰πü‰∏çËÉΩÂè†Âä†ÊéíÂÆÉÈîÅ ÊÄé‰πà‰ΩøÁî®‰πêËßÇÈîÅÂíåÊÇ≤ËßÇÈîÅÊòØ‰∏ÄÁßçÊÄùÊÉ≥ÔºåÂú®java‰∏≠ÂíåÊï∞ÊçÆÂ∫ì‰∏≠ÂùáÊúâ‰∏çÂêåÁöÑÊÄùË∑ØÂÆûÁé∞ javaÂÆûÁé∞12* ‰πêËßÇÈîÅ java.util.concurrent.atomicÂåÖ‰∏≠ÁöÑÁ±ªÔºåÈÄöËøáCASÁÆóÊ≥ïÂÆûÁé∞* ÊÇ≤ËßÇÈîÅ sychronizedÊñπÊ≥ï Êï∞ÊçÆÂ∫ìÂÆûÁé∞1* ‰πêËßÇÈîÅ Ëá™Ë°åÂÆûÁé∞ÔºåÂèØÈÄöËøáÁâàÊú¨Âè∑ÊàñËÄÖÊó∂Èó¥Êà≥ÂÆûÁé∞ ‰æãÂ≠êÔºö‰∏ãÂçïÊìç‰Ωú 1. Êü•ËØ¢ÂΩìÂâç‰ø°ÊÅØÔºåÂåÖÊã¨ÁâàÊú¨Âè∑ `select (status,status,version) from t_goods where id=#{id}` 2. ÁîüÊàêËÆ¢ÂçïÔºå‰∏öÂä°Êìç‰Ωú 3. Êõ¥Êñ∞Êï∞ÊçÆ `update t_goods set status = #{status},version=version+1 where id=#{id} and version=#{version}` 123* ÊÇ≤ËßÇÈîÅ * ÂÖ±‰∫´ÈîÅÂÆûÁé∞ sqlËØ≠Âè•Ôºö `lock in share mode` ‰æãÂ≠êÔºöÂºÄÂêØ‰∏â‰∏™ÁªàÁ´ØÔºåÈùûËá™Âä®Êèê‰∫§‰∫ãÂä°Ê®°Âºè ‰∏Ä‰∏™ÁªàÁ´ØÂºÄÂêØÂÖ±‰∫´ÈîÅ ‚Äã Âè¶‰∏Ä‰∏™ÁªàÁ´ØÂØπÊï∞ÊçÆËøõË°åËØªÔºåËØªÊàêÂäüÔºåÂè†Âä†ÂÖ±‰∫´ÈîÅ‰πüÂèØ‰ª• Á¨¨‰∏â‰∏™ÁªàÁ´ØÂØπÊï∞ÊçÆËøõË°åupdateÊìç‰ΩúÔºåÂÜôÂ§±Ë¥•Ôºå‰∏ÄÁõ¥Á≠âÂæÖ 12* ÊéíÂÆÉÈîÅÂÆûÁé∞ sqlËØ≠Âè•Ôºö`for update` ‰æãÂ≠êÔºöÂºÄÂêØ‰∏§‰∏™ÁªàÁ´Ø Á¨¨‰∏Ä‰∏™ÊâßË°åÊéíÂÆÉÈîÅÔºåÊöÇ‰∏çÊèê‰∫§‰∫ãÂä° Á¨¨‰∫å‰∏™ÁªàÁ´ØÊâßË°å‰∏§‰∏™Êìç‰Ωúselect: Êü•ËØ¢Âá∫Êú™Êõ¥ÊîπÂâçÁöÑÊï∞ÊçÆupdate:Á≠âÂæÖÔºåÂ¶Ç‰∏ãÂõæ ÂΩìÁ¨¨‰∏Ä‰∏™ÁªàÁ´ØÊèê‰∫§‰∫ãÂä° commit work,Á¨¨‰∫å‰∏™ÁªàÁ´ØÁöÑupdateÊìç‰ΩúÊâßË°åÂÆåÊàê ‰ºòÁº∫ÁÇπ ‰πêËßÇÈîÅÔºö ‰ºòÁÇπÔºöÈÄÇÁî®‰∫éÂÜôÊØîËæÉÂ∞ëÁöÑÊÉÖÂÜµ‰∏ãÔºåÂç≥ÂÜ≤Á™ÅÁúüÁöÑÂæàÂ∞ëÂèëÁîüÁöÑÊó∂ÂÄôÔºåËøôÊ†∑ÂèØ‰ª•ÁúÅÂéª‰∫ÜÈîÅÁöÑÂºÄÈîÄÔºåÂä†Â§ß‰∫ÜÁ≥ªÁªüÁöÑÊï¥‰∏™ÂêûÂêêÈáè„ÄÇ Áº∫ÁÇπÔºåÂÜ≤Á™ÅÊØîËæÉÂ§öÁöÑÊÉÖÂÜµÔºåÊâßË°å‰ºöÂ≠òÂú®Â§ßÈáèÁöÑÂ§±Ë¥•Ôºå‰∏äÂ±ÇÂ∫îÁî®‰ºö‰∏çÊñ≠ÁöÑretryÔºåËøôÊ†∑ÂèçÂÄíÊòØÈôç‰Ωé‰∫ÜÊÄßËÉΩ ÊÇ≤ËßÇÈîÅÔºö ‰ºòÁÇπÔºö‰øùËØÅ‰∫ÜÊï∞ÊçÆÁöÑÂÆåÊï¥ÊÄß Áº∫ÁÇπÔºö Â§ÑÁêÜÂä†ÈîÅÁöÑÊú∫Âà∂‰ºöËÆ©Êï∞ÊçÆÂ∫ì‰∫ßÁîüÈ¢ùÂ§ñÁöÑÂºÄÈîÄÔºåËøòÊúâÂ¢ûÂä†‰∫ßÁîüÊ≠ªÈîÅÁöÑÊú∫‰ºö„ÄÇ]]></content>
      <categories>
        <category>ÈîÅ</category>
      </categories>
      <tags>
        <tag>ÈîÅ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Èù¢ËØïÁúüÈ¢ò]]></title>
    <url>%2F2018%2F07%2F10%2F%E9%9D%A2%E8%AF%95%E7%9C%9F%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ËÄÉÊãâÈòÖËØªÁ¨îËØïÈ¢ò Âü∫Á°ÄÈÉ®ÂàÜÔºåÊï∞ÁªÑÁöÑ‰º†ÈÄíÊòØ‰º†ÈÄíÂØπË±°ËøòÊòØÂ§çÂà∂ÂØπË±° Ë°•Á†ÅËÆ°ÁÆóÊñπÂºè synchronizedÊñπÊ≥ïÂèØ‰øÆÈ•∞ÁöÑÊòØ‰ªÄ‰πàÔºå‰øÆÈ•∞Êó∂ÂÄôÁöÑ‰ΩúÁî®ÊòØ‰ªÄ‰πà ÂÜôÁ∫øÁ®ã Èù¢ËØïÈ¢ò hashmapÂíåcocurrentHashMapÁöÑÂå∫Âà´ÂíåËÅîÁ≥ª volatileÊñπÊ≥ïÁöÑ‰ΩúÁî®ÂíåÂÜÖÈÉ®ÂàÜÊûê redisÂàÜÂ∏ÉÂºèÈîÅ Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑÈîÅ cas ËøòÈúÄÂáÜÂ§áÁöÑÂú∞Êñπ redisÁöÑÊï∞ÊçÆÁ±ªÂûã Âπ∂Âèë rabbitmqÁöÑÂ§ç‰π† kafkaÁöÑÊ¶ÇÂøµ spring boot redis Áå´ÁúºÁîµÂΩ±‚Äã ÂÖàÁúãÁÆÄÂéÜÔºåÊ†πÊçÆÁÆÄÂéÜÂèëÈóÆ Áîª‰∏ÄÁîªÈ°πÁõÆÁöÑÁ≥ªÁªüÊû∂ÊûÑÂõæÔºå‰ΩøÁî®ÁöÑÊäÄÊúØÊ†à mycatÂ∫ïÂ±ÇÊÄé‰πàÁÆ°ÁêÜ‰∏ª‰ªéÔºåÊÄé‰πàÁÆ°ÁêÜËØªÂÜôÂàÜÁ¶ª ËÆæËÆ°‰∏Ä‰∏™ÂèëÊä•Âô®ÁöÑÊñπÊ°àÔºåÁî®Êù•ÁîüÊàêidÔºå‰∏çÈáçÂ§ç ***ÔºàÈöèÊÑèËÆæËÆ°ÊñπÊ°àÔºåÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏ãÔºâ rabbitmqÂíåkafkaÁöÑÈÄâÂûãÔºàÊäÄÊúØÊñπÊ°àÂØπÊØîÔºâÔºåÂ∫ïÂ±ÇÁöÑÂéüÁêÜÊòØÂê¶‰∫ÜËß£ dubbo,RPCÁöÑË∞ÉÁî®ÊñπÂºèÂíåHTTPË∞ÉÁî®ÊñπÂºèÁöÑÂå∫Âà´ javaÂü∫Á°Ä hashmapÁöÑÁªìÊûÑÊòØ‰ªÄ‰πàÊ†∑ÁöÑÔºåÁ∫øÁ®ãÂÆâÂÖ®Âêó hashMap‰∏≠ÁöÑÁ∫¢ÈªëÊ†ëÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÊòØÂ§öÂ∞ëÔºåÊòØÂê¶ÊúâÂÆâÂÖ®ÁöÑÈõÜÂêà concurrentHashMapÁöÑÁªìÊûÑÊòØ‰ªÄ‰πàÊ†∑Â≠êÁöÑ ‰∏∫‰ªÄ‰πàconcurrentHashMapÊòØÂÆâÂÖ®ÁöÑ volatileÊñπÊ≥ïÁöÑ‰ΩúÁî®ÊòØ‰ªÄ‰πà volatileÂ∫ïÂ±ÇÂéüÁêÜÊòØ‰ªÄ‰πàÔºåÊÄé‰πàÂÆûÁé∞ÁöÑ javaÁöÑÂÜÖÂ≠òÂ±èÈöúÂØπvolatileÁöÑÂΩ±Âìç lockÂíåsychronizedÊòØÂê¶‰∫ÜËß£ÔºåÁÆÄËø∞‰∏ãÂå∫Âà´ Á∫øÁ®ãÊ±†ÊòØÂê¶‰∫ÜËß£ÔºåÁ∫øÁ®ãÊ±†Âú®ÂàõÂª∫ÁöÑÊó∂ÂÄôÔºåÂøÖ‰º†ÁöÑÂèÇÊï∞ÊòØÂì™‰∫õ ÂÜô‰∏ÄÊÆµ‰ª£Á†ÅÔºå‰∫åÂàÜÊü•ÊâæÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶Â§öÂ∞ë Âø´ÁúãÊº´Áîª logÊó•ÂøóÊòØÂê¶‰ºöÂΩ±ÂìçÊÄßËÉΩ rabbitmqÂíåkafkaÈÄâÂûãÂå∫Âà´ rabbitmqÊï∞ÊçÆÂ≠òÂÇ®ÁöÑÂú∞Êñπ ÁÆóÊ≥ïÔºöÂ∞Ü‰∏Ä‰∏™ÊúâÂ∫èÁöÑÁü≠Êï∞ÁªÑÔºåÊèíÂÖ•Âà∞ÊúâÂ∫èÁöÑÈïøÊï∞ÁªÑ‰∏≠ÔºåË¶ÅÊ±Ç‰øùËØÅÈïøÊï∞ÁªÑÊúâÂ∫è ÁìúÂ≠ê‰∫åÊâãËΩ¶ È°πÁõÆÁªìÊûÑÂõæ kafkaÂíårabbitmqÈÄâÂûã ÊäÄÊúØÂØπÊØî È°πÁõÆÊï∞ÊçÆÂ∫ìÊÄé‰πà‰ΩøÁî®ÁöÑ Êï∞ÊçÆÂ∫ì‰∫ãÂä°Êú∫Âà∂ÂàÜÁ±ª ÂπªËØªÂíåËÑèËØª Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂàÜÁ±ª Êï∞ÊçÆÂ∫ì‰∏ª‰ªéÈÄöËøá‰ªÄ‰πàÂÆûÁé∞ÁöÑ Á¥¢ÂºïÂàÜÁ±ª spring Âíåspring bootÁöÑÂÖ≥Á≥ª spring IOCÊÄé‰πàÁêÜËß£ IOCÁöÑÊ≥®ÂÖ•ÊñπÂºèÂàÜÁ±ª spring AOPÊÄé‰πàÁêÜËß£ aopÈÄöÁü•ÁöÑÂàÜÁ±ª ÁéØÁªïÂàáÁÇπÁöÑ‰ΩøÁî® hashmapÂíåhashtableÁöÑÂå∫Âà´ concurrentHashMap volaliteÁöÑ‰ΩúÁî® ÊéíÂ∫èÁöÑmapÊúâÂì™‰∫õ sychronizedÈîÅÂØπË±° jvmÁöÑgc Á∫øÁ®ãÊ±†ÁöÑÁßçÁ±ª Á∫øÁ®ãÊ±†ÁöÑÂøÖË¶ÅÂèÇÊï∞ ÈÅáÂà∞ËøáÊúÄÂ§öÁöÑÂºÇÂ∏∏ÔºåÂºÇÂ∏∏ÁöÑ‰∏Ä‰∫õÁ±ª Êü•ÊâæÁÆóÊ≥ïÊúâÂì™‰∫õ ‰∫åÂàÜÊü•ÊâæÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ ÊéíÂ∫èÁÆóÊ≥ïÊúâÂì™‰∫õ ÂÜíÊ≥°ÊéíÂ∫èÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ Âø´ÊéíÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶ ÂÜô‰∏Ä‰∏™ÁÆóÊ≥ïÔºöÊúâ‰∏Ä‰∏™Êï∞ÁªÑÔºåÂ≠òÂú®‰∏âÁßçÊÉÖÂÜµÔºö1.ÈÄíÂ¢û 2.ÈÄíÂáè 3.ÂÖàÂáèÂêéÂ¢ûÔºàÂè™Êúâ‰∏Ä‰∏™Ê≥¢Ë∞∑Ôºâ,ÂÜôÁÆóÊ≥ïÊâæÂá∫ÊúÄÂ∞èÁöÑÂÄº Ëä±ÁîüÂ•ΩËΩ¶ ÊéíÂ∫èÁÆóÊ≥ïÊúâÂì™‰∫õ ËÆæËÆ°‰∏çÈáçÂ§çÁöÑÂàÜÂ∏ÉÂºèÊï∞ÊçÆÂ∫ìidÁîüÊàêÊñπÊ°àÔºåÊåâÁÖß‰∏ÄËá¥ÊÄßhashÁöÑÊÄùË∑ØÊÄé‰πàÂÅö ‰ºòÂåñÁöÑÊÄùË∑ØÔºåÂÖ≥‰∫éÁ¥¢ÂºïÂëΩ‰∏≠Ê£ÄÊü•Â¶Ç‰ΩïÊ£ÄÊü•ÔºàÁ¥¢ÂºïÁöÑÁü•ËØÜÔºâ ÂÖ≥‰∫éÊó•ÂøóÔºåÊòØÂê¶ÁúüÁöÑÊúâÂøÖË¶Å Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÁöÑB+Ê†ëÁªìÊûÑÊòØÂê¶‰∫ÜËß£„ÄÇinÁöÑÊìç‰ΩúÊòØÂê¶‰ºö‰ΩøÁî®B+Ê†ë rabbitmqÊòØÂê¶ÊòØÊúâÂ∫èÁöÑÔºåÊúâÊ≤°ÊúâÂõûÂ∫îÊú∫Âà∂ rabbitmqÁöÑpatitionÊòØÂê¶Áü•ÈÅì redisÁöÑÊï∞ÊçÆÁªìÊûÑÊúâÂá†Áßç Êúâ‰∏Ä‰∏™ÂØπË±°ÔºåÈáåÈù¢Âê´Êúâ‰∏Ä‰∫õÂÖÉÁ¥†ÔºåÊÄé‰πàÂ≠òÂÖ•redis‰∏≠ÔºàÊØîËæÉÈ¢ëÁπÅÊìç‰ΩúÔºåË¶ÅÊ±ÇÊÄßËÉΩÔºâ redisÁöÑÂàÜÂ∏ÉÂºèÈõÜÁæ§ÊÄé‰πàÂÅö redisÁöÑÊåÅ‰πÖÂåñÊÄé‰πàÂÆûÁé∞ spring IOCÂÆπÂô®Ê≥®ÂÖ•ÂéüÁêÜÔºåÊ∫êÁ†ÅÊòØÂê¶ÁúãËøá javaÂü∫Á°Ä„ÄÇÈõÜÂêàÁöÑÂàÜÁ±ªÔºåcollection‰∏ãÈù¢Êúâ‰ªÄ‰πàÈõÜÂêàÔºåmapÈõÜÂêàÊòØ‰∏çÊòØÂú®‰∏ÄËµ∑ mapÁöÑÂàùÂßãÂÆπÈáèÂíåË¥üËΩΩÂõ†Â≠êÊòØÂ§öÂ∞ë Êâ©ÂÆπÊÄé‰πàÊâ©ÂÆπÔºåÂÖ∑‰ΩìÊµÅÁ®ãÔºåÊòØÂê¶ÊòØ‰∏Ä‰∏™‰∏Ä‰∏™Â§çÂà∂ concurrentÂåÖ‰∏ãÈù¢ÊØîËæÉÁÜüÊÇâÂì™‰∏™Áü•ËØÜÁÇπÔºàvolatileÔºâ,‰ΩúÁî®ÂíåÂéüÁêÜÊòØ‰ªÄ‰πàÔºåÂ∫îÁî®Âú∫ÊôØÊòØ‰ªÄ‰πà ÈòüÂàóÂêåÊ≠•Âô®ÔºåÊòØÂê¶ÁÜüÊÇâÔºåÊúâÂì™‰∫õÈòüÂàóÂêåÊ≠•Âô® jvm‰∏≠ÔºåÂ†ÜÂíåÊ†àÊÄé‰πàÂÆö‰πâÔºåÊÄé‰πà‰ΩøÁî® Áî®javaÂÜô‰∏Ä‰∏™ÈìæË°®ÁöÑÁÆÄÂçïÊìç‰ΩúÔºåÊèíÂÖ•‰∏Ä‰∏™ÂÖÉÁ¥†ÂíåÂà†Èô§‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ ÂÄüË¥∑ÂÆù È°πÁõÆÁªìÊûÑÂõæ Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÔºåÊï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂëΩ‰∏≠ÊÄé‰πàÁúãÔºàexplainÔºâ Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÊÄé‰πàÂàõÂª∫ Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂéüÁêÜ Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂîØ‰∏ÄÁ¥¢ÂºïÊÄé‰πàÂÆö‰πâ Ë∫´‰ªΩËØÅ‰∏∫‰æãÂ≠ê Êï∞ÊçÆÂ∫ìËÅîÂêàÁ¥¢Âºï abc a ab abc ÂÆûÁé∞ÂéüÁêÜ sqlËØ≠Âè•Ë∞É‰ºòÊÄé‰πàË∞É‰ºò ‰πêËßÇÈîÅÂíåÊÇ≤ËßÇÈîÅÊÄé‰πàÂÆö‰πâÔºå‰ºòÁº∫ÁÇπÊòØ‰ªÄ‰πà ÈõÜÂêàÊúâÂì™‰∫õÔºàÂ≠¶‰∏Ä‰∏ãÊÄé‰πàÊèèËø∞Ôºâ listÂíåsetÁöÑÂå∫Âà´ÊòØ‰ªÄ‰πà Êúâ‰∏Ä‰∏™list,ÈáåÈù¢Êúâ20‰∏™user,Ë¶ÅÊ±ÇÊåâÁÖßageÂ≠òÂÇ®ÔºåÊÄé‰πàÂ≠òÂÇ® Êï∞ÊçÆÂ∫ì‰∏≠Â≠òÂÇ®ÔºåÊåâÁÖßclassÂíåsexÁªüËÆ°ÊÄª‰∫∫Êï∞ group by gitÁöÑÂ∑•‰ΩúÂå∫ÔºåÊöÇÂ≠òÂå∫ÂíåËøúÁ®ã‰ªìÂ∫ì Êúâ‰∏§ÊÆµ‰ª£Á†ÅÈáçÂ§çÔºåÊåâÁÖßÈòøÈáåËßÑÁ∫¶ÊÄé‰πàÂÜô ‰∫åÂèâÊ†ëÔºåÂ±ÇÂ∫èÈÅçÂéÜÂÜôÂá∫ ÂºïÁî≥Ôºö Êï∞ÊçÆÂ∫ìÁ¥¢ÂºïÂíåÂéüÁêÜ‰∏ÄÂÆöË¶ÅÊêûÊ∏ÖÊ•öÔºàÂº±È°πÔºâ ‰∫åÂèâÊ†ëÂá†‰∏™ÈÅçÂéÜ javaÈõÜÂêàÂÜçÊÄªÁªì‰∏ÄÈÅç Á™ÅÂá∫‰∫ÆÁÇπÔºåËÆ©‰∫∫ÊÑüËßâÊúâÁâπÁÇπ]]></content>
  </entry>
</search>
